[{"/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/index.js":"1","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/reportWebVitals.js":"2","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/App.js":"3","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Header.js":"4","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/AddTask.js":"5","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Tasks.js":"6","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Footer.js":"7","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/AudioItems.js":"8","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/SaveFav.js":"9","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Button.js":"10","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Task.js":"11"},{"size":499,"mtime":1628473757000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1623071170000,"results":"14","hashOfConfig":"13"},{"size":7294,"mtime":1628496932644,"results":"15","hashOfConfig":"13"},{"size":1015,"mtime":1628482743000,"results":"16","hashOfConfig":"13"},{"size":1347,"mtime":1623071170000,"results":"17","hashOfConfig":"13"},{"size":259,"mtime":1627351812000,"results":"18","hashOfConfig":"13"},{"size":862,"mtime":1628482941000,"results":"19","hashOfConfig":"13"},{"size":6976,"mtime":1628487191000,"results":"20","hashOfConfig":"13"},{"size":6709,"mtime":1628497387419,"results":"21","hashOfConfig":"13"},{"size":408,"mtime":1623071170000,"results":"22","hashOfConfig":"13"},{"size":455,"mtime":1623071170000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18cmcsv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/index.js",[],["52","53"],"/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/reportWebVitals.js",[],"/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/App.js",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import { useState, useEffect } from 'react'\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\n//import { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\"\n\nimport { ClientContext, GraphQLClient } from 'graphql-hooks'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport AudioItems from './components/AudioItems'\nimport SaveFav from './components/SaveFav'\n//import About from './components/About'\n\n\nimport { PlaySkipForward } from 'react-ionicons'\nimport { PlaySkipBack } from 'react-ionicons'\n\nimport { MusicalNotes } from 'react-ionicons'\nimport { Heart } from 'react-ionicons'\nimport { Person } from 'react-ionicons'\n\n\n//<Route path='/about' component={About} />\n\n\n// apollo client\n/*\nconst client = new ApolloClient({\n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache()\n})\n*/\n\nconst client = new GraphQLClient({ url: 'http://3.13.34.21:1337/graphql' })\n\n\nconst App = () => { \n\nvar loadUiId = null;\n//var loadUiId= soundCloudItems.length;\n\n  \n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])      \n\n  const [soundCloudItems, setSoundcloudItems] = useState([])\n\n  var [AppUser, setAppUser] = useState([])\n\n  //var [FavsT, setFavsT] = useState([])\n\n  useEffect(() => {\n\n\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n\n\n    const getSongs = async () => {\n      const songsFromServer = await fetchSongs()\n      setSoundcloudItems(songsFromServer)\n    }\n\n    getSongs()\n    \n\n    const getUser = async () => {\n      const userFromServer = await fetchAppUser()\n      setAppUser(userFromServer)\n    }\n\n    getUser()\n\n\n    const authUser = async () => {\n      \n\n      if (  (localStorage.getItem(\"user\"))  == null ){\n\n        //console.log(manyUsers[0].username)\n\n        var userAssign;\n        userAssign = Math.floor(100000 + Math.random() * 900000);\n\n        //\n        addAppUser({\"username\":userAssign});\n        //\n\n        var transferName = userAssign;\n\n\n        const userFromServer = await fetchAppUser();\n        var manyUsers = userFromServer;\n\n        var checkUsers = manyUsers;\n\n        var checkUsersCount = manyUsers.length;\n\n        //console.log(checkUsersCount);\n\n        //console.log(checkUsers);\n\n        //console.log(transferName);\n\n        localStorage.setItem(\"user\", transferName);\n\n        //var x = localStorage;\n\n            //for (var i = 0; i < checkUsersCount; i++, transferName ) {\n\n              //if (checkUsers[i].username == transferName ) {\n\n                //localStorage.setItem(\"user\", checkUsers[i]);\n\n              //} \n\n            //}   \n            \n\n      } \n\n      /*\n\n      else if (  (localStorage.getItem(\"user\"))  != null ){\n\n          var getItemAlert = localStorage.getItem(\"user\");\n\n\n\n\n          const userFromServer = await fetchAppUser();\n          var manyUsers = userFromServer;\n\n          var getSongFavs = manyUsers;\n\n          \n          for (var i = 0; i < getSongFavs.length; i++ ) {\n\n            if (getSongFavs[i].username == getItemAlert){\n             \n              \n              var ScNoTemp = getSongFavs[i].favs;\n\n              console.log(ScNoTemp)\n\n              var ScNoTempArray = [];\n\n              for (var i = 0; i < ScNoTemp.length; i++) {\n\n                 ScNoTempArray.push(ScNoTemp[i].id)\n\n\n              \n              }  \n\n\n              localStorage.setItem(\"FavsTest\", JSON.stringify(ScNoTempArray));\n            \n            }  \n\n          } \n\n          \n          \n\n\n      }\n\n      */\n\n    }\n\n    authUser()\n\n    /*\n    const sendFavs = async () => {\n      //const userFromServer = await fetchAppUser()\n\n      var favsFromStorage = JSON.parse( localStorage.getItem(\"FavsTest\") );\n\n      console.log(favsFromStorage)\n\n      setFavsT(favsFromStorage);\n    }\n\n    sendFavs()\n    */\n\n\n  }, [])\n\n\n\n  const fetchSongs = async () => {\n    const res = await fetch('http://3.13.34.21:1337/Songs')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchAppUser = async () => {\n    const res = await fetch('http://3.13.34.21:1337/App-users')\n    const data = await res.json()\n\n    return data\n  }\n\n\n\n  const addAppUser = async (taska) => {\n    const res = await fetch('http://3.13.34.21:1337/App-users', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(taska),\n    })\n\n    //const data = await res.json()\n\n    //setAppUser([...AppUser, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://3.13.34.21:1337/Tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://3.13.34.21:1337/Tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://3.13.34.21:1337/Tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://3.13.34.21:1337/Tasks/${id}`, {\n      method: 'DELETE',\n    })\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://3.13.34.21:1337/Tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n  \n\n\n\n  return (\n    <Router>   \n      <ClientContext.Provider value={client}>\n      <div className='container'>\n        \n\n        <div className='sticky-top' style={{marginBottom:'10px'}}>\n          <Header\n            onAdd={() => setShowAddTask(!showAddTask)}\n            showAdd={showAddTask}\n          />\n        </div>\n\n        <Switch>\n          <Route path=\"/fav\">\n              \n              <SaveFav/>\n          </Route>\n          <Route path=\"/sett\">\n            <></>\n          </Route>\n          <Route path=\"/\" exact >\n              \n              <AudioItems/>\n             \n          </Route>\n        </Switch>\n\n        <div className='sticky-bottom'>\n          <Footer />\n        </div>\n      \n      \n      </div>\n\n      </ClientContext.Provider>\n    </Router>\n\n\n\n\n\n  )\n\n}\n\nexport default App\n","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Header.js",["71","72"],"import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './Button'\n\nimport { Bonfire } from 'react-ionicons'\n\n\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  const location = useLocation()\n\n  return (\n    <header className='header'>\n        <div>\n        <Bonfire\n          color={'orange'} \n          beat \n          title={\"defaultLogo\"}\n          height=\"30px\"\n          width=\"30px\"\n        />\n\n        <h4 style={{fontWeight:'bold', color:'orange', marginLeft:'32px', marginTop:'-35px'}}>{title}</h4>\n      </div>\n \n{/*\n      {location.pathname === '/' && (\n       <Button\n          color={showAdd ? 'red' : 'green'}\n          text={showAdd ? 'Close' : 'Post'}\n          onClick={onAdd}\n        />\n      )}\n*/}\n\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'EveyMusic',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//   color: 'red',\n//   backgroundColor: 'black',\n// }\n\nexport default Header\n","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/AddTask.js",[],"/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Tasks.js",[],"/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Footer.js",["73"],"import { Link } from 'react-router-dom'\nimport { MusicalNotes } from 'react-ionicons'\nimport { Heart } from 'react-ionicons'\nimport { Person } from 'react-ionicons'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Link to='/'>\n      <MusicalNotes className=\"space-buttons-bottom\"\n        color={\"orange\"} \n        title={\"chart\"}\n        height=\"50px\"\n        width=\"30px\"\n      /></Link>\n\n      <Link to='/fav'>\n      <Heart className=\"space-buttons-bottom\"\n        color={\"orange\"} \n        title={\"fav\"}\n        height=\"50px\"\n        width=\"30px\"\n      /></Link>\n\n      {/*\n      <Link to='/sett'>\n      <Person className=\"space-buttons-bottom\"\n        color={\"orange\"} \n        title={\"sett\"}\n        height=\"50px\"\n        width=\"30px\"\n      /></Link>\n      */}\n\n      {/*<Link to='/about'>About</Link>*/}\n\n    </footer>\n  )\n}\n\nexport default Footer\n\n\n","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/AudioItems.js",["74","75","76","77","78","79","80","81","82"],"//import React from 'react';\n//import ReactDOM from 'react-dom';\n\nimport React, { useState, useEffect } from 'react';\n\nimport { PlaySkipForward } from 'react-ionicons'\nimport { Heart } from 'react-ionicons'\n\nimport JrsScWidget from 'a-jrs-sc-widget';\n\nimport $ from 'jquery';\n\n//import { useQuery, useMutation, gql } from '@apollo/client';\n\nimport { useQuery, useMutation } from 'graphql-hooks'\n\n\n\n//import jrswidget from './staticsoundcloudapi/api.js';\n       \n//1049717548\n//16719183\n\n //300 height\n\n\n/*           \n<h3>Artist- {currElement.artist}</h3>\n<h3>{currElement.songName}</h3>\n*/\n\n//497085\n\n\n\nconst GET_SONGS = `\nquery GetUser($username: Long!) {\nsongs{\n      id\n      scNo\n        poster{\n          username\n        }\n      favs{\n        song{\n          id \n        }\n      }\n  } \ncurrent:appUsers(where:{username:$username})\n    {\n      id\n      username\n    }  \n}\n\n`\n\nconst CREATE_FAV = `\n\nmutation createFav( $songid: ID!, $app_user: ID!) {\n  createFav(input:\n   { data: {\n     song:$songid , app_user:$app_user\n  }}) {    \n    fav{\n      id\n      song{\n        id\n      }\n      app_user{\n        id\n      }\n    }\n    \n  } \n}\n\n`\n\n//soundCloudItems\n\nconst AudioItems = ({soundCloudItems,loadUiId}) => {\n\n  const [userId, setUserId] = useState([])\n\n  //const [IStorage, setIStorage] = useState([])\n\n\n  const { loading, error, data, refetch:refetchFavs} = useQuery(GET_SONGS, {\n    variables: {\n      username:userId\n    }\n  })\n\n\n  //console.log(data)\n\n  const [updateAppUser] = useMutation(CREATE_FAV)\n\n  async function createFav(favid,current) {\n\n    await updateAppUser({\n      variables: {\n         songid: favid, app_user:current\n      },\n\n    })\n\n    //setUserId('')\n\n    //setIStorage(data);\n\n    refetchFavs();\n\n\n  }\n\n\n\n\n\n\nvar SC = JrsScWidget.methodexpos(); \n\nvar api ;\n\n var playerCurrentlyPlaying = {\n     \"api\": null,\n     \"frameID\": \"ui-id-0\"\n };\n var players = {\n     \"yt\": {},\n     \"sc\": {}\n };\n\nvar send = \"next\";\n\n\n\n\nuseEffect(() => {\n\n\n  var sendUserId = function (){\n\n      var fromStorage = JSON.parse( localStorage.getItem(\"user\") );\n\n      //console.log(fromStorage)\n      \n      setUserId(fromStorage);\n  }\n\n  sendUserId();\n\n\n\n  //(function () {\n     $(\".soundcloud_embed iframe\").each(function () {\n         var frameid = $(this).attr('id');\n         players[\"sc\"][frameid] = {};\n         players[\"sc\"][frameid] = {\n             \"widget\": SC.Widget(document.getElementById(frameid)),\n                 \"firstplay\": true\n         };\n         players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.READY, function () {\n             players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.PLAY, function () {\n                 onSCPlay(frameid, SC.Widget.Events.PLAY);\n             });\n             players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.PLAY_PROGRESS, function () {\n                 onSCPlay(frameid, SC.Widget.Events.PLAY_PROGRESS);\n             });\n             players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.FINISH, function () {\n                send = \"next\";\n                playNextPlayer(send);\n                 //playNextPlayer();\n             });\n         });\n     });\n  //}());\n     \n\n\n\n\n});\n\n\n  const fetchAppUser = async () => {\n    const res = await fetch('http://localhost:1337/App-users')\n    const data = await res.json()\n\n    return data\n  }\n\n\nvar nexttrackjr = function (){\n  //alert(1)\n  \n  send = \"next\";\n\n  playNextPlayer(send);\n\n   //alert(2)\n\n};\n\nvar prevtrackjr = function (){\n\n  //send = \"back\" ;\n\n  //playNextPlayer(send);\n\n};\n\n\n\n\nvar playNextPlayer = function(send) {\n  var nextFrameId = \"ui-id-\";\n  var nextIdNum=parseInt(playerCurrentlyPlaying[\"frameID\"].split(\"-\").pop())+1;\n  //var nextIdNumMinus=nextIdNum-1;   \n\n\n  //var inc = 1;\n\n  //var AmountScIframes = ($(\".soundcloud_embed iframe\").length);\n\n\n  if (nextIdNum != null){\n    \n    nextFrameId=\"ui-id-\"+nextIdNum;\n  \n  } else if (send == \"next\"){\n\n    nextFrameId=\"ui-id-\"+nextIdNum;\n  \n  }  \n\n  /*\n\n  function nextTracka() {\n\n    if (inc < AmountScIframes){\n      inc += 1;\n    } else {\n      inc = 0;\n    }\n    return inc;\n  }\n   \n  function prevTracka() {\n    if (inc > 1){\n      inc -= 1;\n    } else {\n      inc = AmountScIframes;\n    } \n     \n    return inc;\n\n  }\n\n  */\n     \n     switch($(\"#\"+nextFrameId).parent().attr('class')) {\n         case \"youtube_embed\":\n             api=\"yt\";\n             players[api][nextFrameId].playVideo();\n             break;\n         case \"soundcloud_embed\":\n             \n             api=\"sc\";\n             \n             //players[api][nextFrameId][\"widget\"].play();\n             SC.Widget(nextFrameId).play();\n             break;\n     }\n     playerCurrentlyPlaying[\"api\"]=api;\n     playerCurrentlyPlaying[\"frameID\"]=nextFrameId;\n\n};\n\n\nvar pauseCurrentPlayer = function () {\n     var api = playerCurrentlyPlaying[\"api\"],\n         frameid = playerCurrentlyPlaying[\"frameID\"];\n\n     switch (api) {\n         case \"yt\":\n             players[api][frameid].pauseVideo();\n             break;\n         case \"sc\":\n             players[api][frameid][\"widget\"].pause();\n             break;\n     }\n };\n\n\n//\n\nvar onSCPlay = function (frameid, event) {\n     if (event == SC.Widget.Events.PLAY || players[\"sc\"][frameid][\"firstplay\"] == true) {\n         if (playerCurrentlyPlaying[\"api\"] == \"yt\") {\n             pauseCurrentPlayer();\n         }\n         playerCurrentlyPlaying[\"api\"] = \"sc\";\n         playerCurrentlyPlaying[\"frameID\"] = frameid;\n         players[\"sc\"][frameid][\"firstplay\"] = false;\n     }\n }; \n\nconsole.log(data);\n\n  if (loading) return 'Loading...'\n  if (error) return 'Please Refresh Browser'\n\n  return (\n    <>\n\n\n        <div className=\"sticky-nextplayer\">\n            <PlaySkipForward \n              color={'orange'} \n              title={\"playall\"}\n              height=\"25px\"\n              width=\"25px\"\n              onClick={\n                ()=> nexttrackjr()\n              }\n            />\n        </div>\n\n        <div>\n            {data.songs.map(({ id, scNo, favs }) => (\n            \n            <div key={scNo} className='soundcloud_embed' style={{ marginTop:'10px'}}>\n              <iframe title=\"title\" id={'ui-id-'+id} width=\"100%\" height=\"220\" scrolling=\"no\" frameBorder=\"no\" allow=\"autoplay\" src={'https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/' + scNo + '&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true'}/>\n              <div className='centerer'>\n                  <Heart style ={{ }}\n                    color={'red'} \n                    title={\"\"}\n                    height=\"25px\"\n                    width=\"25px\"\n                    onClick={ ()=>createFav( id, data.current[0].id ) }\n                   />\n                   <h5 style={{ color:'red'}}>\n                   {favs.length}\n                   </h5>\n              </div>\n            \n            </div> \n            \n            ))}\n        </div>\n\n\n    </>\n\n  )\n}\n\nexport default AudioItems\n\n\n","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/SaveFav.js",["83","84","85","86","87","88","89","90","91"],"//import React from 'react';\n//import ReactDOM from 'react-dom';\n\nimport React, { useState, useEffect } from 'react';\n\nimport { PlaySkipForward } from 'react-ionicons'\nimport { Heart } from 'react-ionicons'\n\nimport JrsScWidget from 'a-jrs-sc-widget';\n\nimport $ from 'jquery';\n\n//import { useQuery, useMutation, gql } from '@apollo/client';\n\nimport { useQuery, useMutation } from 'graphql-hooks'\n\n\n\n//import jrswidget from './staticsoundcloudapi/api.js';\n       \n//1049717548\n//16719183\n\n //300 height\n\n\n/*           \n<h3>Artist- {currElement.artist}</h3>\n<h3>{currElement.songName}</h3>\n*/\n\n//497085\n\n\n\nconst GET_APPUSER_FAVS = `\n query GetUser($username: Long!) {\n    \n    appUsers(where:{username:$username})\n    {\n      id\n      username\n      favs{\n        id\n        song{\n          id\n          scNo\n        }\n      }\n    }\n} \n\n`\n\nconst DELETE_FAV = `\n\nmutation deleteFav ($id: ID! ) {\n  deleteFav(input:{ \n    where: {id: $id}})  \n  {\n     \n    fav{\n      id\n      song{\n        id\n        scNo\n      }\n    }\n    \n  } \n}\n\n`\n\n//soundCloudItems\n\nconst SaveFav = ({soundCloudItems,loadUiId}) => {\n\n  const [userId, setUserId] = useState([])\n\n  //const [IStorage, setIStorage] = useState([])\n\n\n  const { loading, error, data, refetch:refetchFavs} = useQuery(GET_APPUSER_FAVS, {\n    variables: {\n      username:userId\n    }\n  })\n\n\n  //console.log(data)\n\n  const [updateAppUser] = useMutation(DELETE_FAV)\n\n  async function deleteFav(favid) {\n\n    await updateAppUser({\n      variables: {\n         id:favid,\n      },\n\n    })\n\n    //setUserId('')\n\n    //setIStorage(data);\n\n    refetchFavs();\n\n\n  }\n\n\n\n\n\n\nvar SC = JrsScWidget.methodexpos(); \n\nvar api ;\n\n var playerCurrentlyPlaying = {\n     \"api\": null,\n     \"frameID\": \"ui-id-0\"\n };\n var players = {\n     \"yt\": {},\n     \"sc\": {}\n };\n\n\nvar send = \"next\";\n\n\n\n\nuseEffect(() => {\n\n\n  var sendUserId = function (){\n\n      var fromStorage = JSON.parse( localStorage.getItem(\"user\") );\n\n      //console.log(fromStorage)\n      \n      setUserId(fromStorage);\n  }\n\n  sendUserId();\n\n\n\n  //(function () {\n     $(\".soundcloud_embed iframe\").each(function () {\n         var frameid = $(this).attr('id');\n         players[\"sc\"][frameid] = {};\n         players[\"sc\"][frameid] = {\n             \"widget\": SC.Widget(document.getElementById(frameid)),\n                 \"firstplay\": true\n         };\n         players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.READY, function () {\n             players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.PLAY, function () {\n                 onSCPlay(frameid, SC.Widget.Events.PLAY);\n             });\n             players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.PLAY_PROGRESS, function () {\n                 onSCPlay(frameid, SC.Widget.Events.PLAY_PROGRESS);\n             });\n             players[\"sc\"][frameid][\"widget\"].bind(SC.Widget.Events.FINISH, function () {\n                send = \"next\";\n                playNextPlayer(send);\n                 //playNextPlayer();\n             });\n         });\n     });\n  //}());\n     \n\n\n\n\n});\n\n\n  const fetchAppUser = async () => {\n    const res = await fetch('http://3.13.34.21:1337/App-users')\n    const data = await res.json()\n\n    return data\n  }\n\n\nvar nexttrackjr = function (){\n  //alert(1)\n  \n  send = \"next\";\n\n  playNextPlayer(send);\n\n   //alert(2)\n\n};\n\nvar prevtrackjr = function (){\n\n  //send = \"back\" ;\n\n  //playNextPlayer(send);\n\n};\n\n\n\n\nvar playNextPlayer = function(send) {\n  var nextFrameId = \"ui-id-\";\n  var nextIdNum=parseInt(playerCurrentlyPlaying[\"frameID\"].split(\"-\").pop())+1;\n  //var nextIdNumMinus=nextIdNum-1;   \n\n\n  //var inc = 1;\n\n  //var AmountScIframes = ($(\".soundcloud_embed iframe\").length);\n\n\n  if (nextIdNum != null){\n    \n    nextFrameId=\"ui-id-\"+nextIdNum;\n  \n  } else if (send == \"next\"){\n\n    nextFrameId=\"ui-id-\"+nextIdNum;\n  \n  }  \n\n  /*\n\n  function nextTracka() {\n\n    if (inc < AmountScIframes){\n      inc += 1;\n    } else {\n      inc = 0;\n    }\n    return inc;\n  }\n   \n  function prevTracka() {\n    if (inc > 1){\n      inc -= 1;\n    } else {\n      inc = AmountScIframes;\n    } \n     \n    return inc;\n\n  }\n\n  */\n     \n     switch($(\"#\"+nextFrameId).parent().attr('class')) {\n         case \"youtube_embed\":\n             api=\"yt\";\n             players[api][nextFrameId].playVideo();\n             break;\n         case \"soundcloud_embed\":\n             \n             api=\"sc\";\n             \n             //players[api][nextFrameId][\"widget\"].play();\n             SC.Widget(nextFrameId).play();\n             break;\n     }\n     playerCurrentlyPlaying[\"api\"]=api;\n     playerCurrentlyPlaying[\"frameID\"]=nextFrameId;\n\n};\n\n\nvar pauseCurrentPlayer = function () {\n     var api = playerCurrentlyPlaying[\"api\"],\n         frameid = playerCurrentlyPlaying[\"frameID\"];\n\n     switch (api) {\n         case \"yt\":\n             players[api][frameid].pauseVideo();\n             break;\n         case \"sc\":\n             players[api][frameid][\"widget\"].pause();\n             break;\n     }\n };\n\n\n//\n\nvar onSCPlay = function (frameid, event) {\n     if (event == SC.Widget.Events.PLAY || players[\"sc\"][frameid][\"firstplay\"] == true) {\n         if (playerCurrentlyPlaying[\"api\"] == \"yt\") {\n             pauseCurrentPlayer();\n         }\n         playerCurrentlyPlaying[\"api\"] = \"sc\";\n         playerCurrentlyPlaying[\"frameID\"] = frameid;\n         players[\"sc\"][frameid][\"firstplay\"] = false;\n     }\n }; \n\nconsole.log(data);\n\n  if (loading) return 'Loading...'\n  if (error) return 'Error...'\n\n  return (\n    <>\n\n\n        <div className=\"sticky-nextplayer\">\n            <PlaySkipForward \n              color={'orange'} \n              title={\"playall\"}\n              height=\"25px\"\n              width=\"25px\"\n              onClick={\n                ()=> nexttrackjr()\n              }\n            />\n        </div>\n\n\n\n        <div>\n            {data.appUsers[0].favs.map(({ id, song }) => (\n            \n            <div key={id} className='soundcloud_embed' style={{ marginTop:'10px'}}>\n              <iframe title=\"title\" id={'ui-id-'+id} width=\"100%\" height=\"220\" scrolling=\"no\" frameBorder=\"no\" allow=\"autoplay\" src={'https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/' + song.scNo + '&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true'}/>\n              <div className='centerer'>\n                  <Heart style ={{ }}\n                    color={'red'} \n                    title={\"\"}\n                    height=\"25px\"\n                    width=\"25px\"\n                    onClick={ ()=>deleteFav( id ) }\n                   />\n              </div>\n            \n            </div> \n            \n            ))}\n        </div>\n\n\n\n    </>\n\n  )\n}\n\nexport default SaveFav\n\n\n","/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Button.js",[],"/projs/eveymusicfrontend.hoofast.com/react-crash-2021-master/src/components/Task.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":3,"column":50,"nodeType":"98","messageId":"99","endLine":3,"endColumn":54},{"ruleId":"96","severity":1,"message":"100","line":11,"column":8,"nodeType":"98","messageId":"99","endLine":11,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":12,"column":8,"nodeType":"98","messageId":"99","endLine":12,"endColumn":15},{"ruleId":"96","severity":1,"message":"102","line":18,"column":10,"nodeType":"98","messageId":"99","endLine":18,"endColumn":25},{"ruleId":"96","severity":1,"message":"103","line":19,"column":10,"nodeType":"98","messageId":"99","endLine":19,"endColumn":22},{"ruleId":"96","severity":1,"message":"104","line":21,"column":10,"nodeType":"98","messageId":"99","endLine":21,"endColumn":22},{"ruleId":"96","severity":1,"message":"105","line":22,"column":10,"nodeType":"98","messageId":"99","endLine":22,"endColumn":15},{"ruleId":"96","severity":1,"message":"106","line":23,"column":10,"nodeType":"98","messageId":"99","endLine":23,"endColumn":16},{"ruleId":"96","severity":1,"message":"107","line":42,"column":5,"nodeType":"98","messageId":"99","endLine":42,"endColumn":13},{"ruleId":"96","severity":1,"message":"108","line":51,"column":10,"nodeType":"98","messageId":"99","endLine":51,"endColumn":25},{"ruleId":"96","severity":1,"message":"109","line":53,"column":8,"nodeType":"98","messageId":"99","endLine":53,"endColumn":15},{"ruleId":"96","severity":1,"message":"110","line":104,"column":13,"nodeType":"98","messageId":"99","endLine":104,"endColumn":23},{"ruleId":"96","severity":1,"message":"111","line":106,"column":13,"nodeType":"98","messageId":"99","endLine":106,"endColumn":28},{"ruleId":"96","severity":1,"message":"112","line":220,"column":11,"nodeType":"98","messageId":"99","endLine":220,"endColumn":14},{"ruleId":"96","severity":1,"message":"113","line":255,"column":9,"nodeType":"98","messageId":"99","endLine":255,"endColumn":16},{"ruleId":"96","severity":1,"message":"114","line":274,"column":9,"nodeType":"98","messageId":"99","endLine":274,"endColumn":19},{"ruleId":"96","severity":1,"message":"115","line":285,"column":9,"nodeType":"98","messageId":"99","endLine":285,"endColumn":23},{"ruleId":"96","severity":1,"message":"116","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"117","line":10,"column":9,"nodeType":"98","messageId":"99","endLine":10,"endColumn":17},{"ruleId":"96","severity":1,"message":"106","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":174,"column":24,"nodeType":"120","endLine":174,"endColumn":30},{"ruleId":"96","severity":1,"message":"121","line":189,"column":9,"nodeType":"98","messageId":"99","endLine":189,"endColumn":21},{"ruleId":"96","severity":1,"message":"122","line":208,"column":5,"nodeType":"98","messageId":"99","endLine":208,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":234,"column":19,"nodeType":"125","messageId":"126","endLine":234,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":265,"column":6,"nodeType":"129","messageId":"130","endLine":277,"endColumn":7},{"ruleId":"127","severity":1,"message":"128","line":288,"column":6,"nodeType":"129","messageId":"130","endLine":295,"endColumn":7},{"ruleId":"123","severity":1,"message":"124","line":302,"column":16,"nodeType":"125","messageId":"126","endLine":302,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":302,"column":80,"nodeType":"125","messageId":"126","endLine":302,"endColumn":82},{"ruleId":"123","severity":1,"message":"124","line":303,"column":44,"nodeType":"125","messageId":"126","endLine":303,"endColumn":46},{"ruleId":"118","severity":1,"message":"119","line":169,"column":24,"nodeType":"120","endLine":169,"endColumn":30},{"ruleId":"96","severity":1,"message":"121","line":184,"column":9,"nodeType":"98","messageId":"99","endLine":184,"endColumn":21},{"ruleId":"96","severity":1,"message":"122","line":203,"column":5,"nodeType":"98","messageId":"99","endLine":203,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":229,"column":19,"nodeType":"125","messageId":"126","endLine":229,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":260,"column":6,"nodeType":"129","messageId":"130","endLine":272,"endColumn":7},{"ruleId":"127","severity":1,"message":"128","line":283,"column":6,"nodeType":"129","messageId":"130","endLine":290,"endColumn":7},{"ruleId":"123","severity":1,"message":"124","line":297,"column":16,"nodeType":"125","messageId":"126","endLine":297,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":297,"column":80,"nodeType":"125","messageId":"126","endLine":297,"endColumn":82},{"ruleId":"123","severity":1,"message":"124","line":298,"column":44,"nodeType":"125","messageId":"126","endLine":298,"endColumn":46},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Tasks' is defined but never used.","'AddTask' is defined but never used.","'PlaySkipForward' is defined but never used.","'PlaySkipBack' is defined but never used.","'MusicalNotes' is defined but never used.","'Heart' is defined but never used.","'Person' is defined but never used.","'loadUiId' is assigned a value but never used.","'soundCloudItems' is assigned a value but never used.","'AppUser' is assigned a value but never used.","'checkUsers' is assigned a value but never used.","'checkUsersCount' is assigned a value but never used.","'res' is assigned a value but never used.","'addTask' is assigned a value but never used.","'deleteTask' is assigned a value but never used.","'toggleReminder' is assigned a value but never used.","'Button' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'send' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'fetchAppUser' is assigned a value but never used.","'prevtrackjr' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]